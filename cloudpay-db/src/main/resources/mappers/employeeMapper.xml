<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cloud.pay.dao.EmployeeMapper" >
  <resultMap id="BaseResultMap" type="cloud.pay.domain.Employee" >
    <id column="employeeID" property="employeeid" jdbcType="BIGINT" />
    <result column="userName" property="username" jdbcType="VARCHAR" />
    <result column="phoneNum" property="phonenum" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="lastUpdate" property="lastupdate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    employeeID, userName, phoneNum, age, createTime, lastUpdate
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from employee
    where employeeID = #{employeeid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from employee
    where employeeID = #{employeeid,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cloud.pay.domain.Employee" >
    insert into employee (employeeID, userName, phoneNum,
      age, createTime, lastUpdate
      )
    values (#{employeeid,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{phonenum,jdbcType=VARCHAR},
      #{age,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, #{lastupdate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cloud.pay.domain.Employee" >
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="employeeid != null" >
        employeeID,
      </if>
      <if test="username != null" >
        userName,
      </if>
      <if test="phonenum != null" >
        phoneNum,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="lastupdate != null" >
        lastUpdate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="employeeid != null" >
        #{employeeid,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="phonenum != null" >
        #{phonenum,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastupdate != null" >
        #{lastupdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cloud.pay.domain.Employee" >
    update employee
    <set >
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="phonenum != null" >
        phoneNum = #{phonenum,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastupdate != null" >
        lastUpdate = #{lastupdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where employeeID = #{employeeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cloud.pay.domain.Employee" >
    update employee
    set userName = #{username,jdbcType=VARCHAR},
      phoneNum = #{phonenum,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      lastUpdate = #{lastupdate,jdbcType=TIMESTAMP}
    where employeeID = #{employeeid,jdbcType=BIGINT}
  </update>
</mapper>